{"version":3,"sources":["components/Navigation/Navigation.js","components/Facerecognition/Facerecognition.js","components/Logo/brain.png","components/Logo/Logo.js","components/Imageform/Imageform.js","components/Rank/Rank.js","components/Signin/Signin.js","components/Register/Register.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","Facerecognition","imageurl","box","id","alt","src","width","height","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Logo","options","max","paddingTop","brain","Imageform","onInputChange","onButtonClick","type","onChange","Rank","Signin","htmlFor","name","value","Register","app","Clarifai","App","apiKey","particlesorigin","particles","color","links","distance","enable","opacity","collisions","move","direction","outMode","random","speed","straight","number","density","area","shape","size","claculateFaceLocaion","data","face","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFace","console","log","setState","event","input","target","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","route","this","params","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.eeabdbbc.chunk.js","sourcesContent":["import React from \"react\";\r\nconst Navigation = ({onRouteChange, isSignedIn}) =>{\r\n        if(isSignedIn){\r\n            return(\r\n            <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                <p onClick={() => onRouteChange('signout')}\r\n                className=\"f3 link dim black underline pa3 pointer \"> Sign Out</p>\r\n            </nav>\r\n            );\r\n        }\r\n        else{\r\n            return(\r\n                <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                <p onClick={() => onRouteChange('Signin')}\r\n                className=\"f3 link dim black underline pa3 pointer \"> Sign In</p>\r\n                <p onClick={() => onRouteChange('Register')}\r\n                className=\"f3 link dim black underline pa3 pointer \"> Register</p>\r\n                \r\n            </nav>\r\n            );\r\n        }\r\n}\r\nexport default Navigation;","import React from \"react\";\r\nimport './Facerecognition.css';\r\nconst Facerecognition = ({ imageurl, box }) => {\r\n    return (\r\n        <div className=\"center ma\">\r\n            <div className=\"absolute mt2\">\r\n                <img id='inputimage' alt=\"\" src={imageurl} width='500px' height='auto' />\r\n                <div className=\"bounding-box\" style={{ top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol }}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Facerecognition;","export default __webpack_public_path__ + \"static/media/brain.481401c4.png\";","import React from \"react\";\r\nimport Tilt from 'react-tilt'\r\nimport brain from './brain.png';\r\nimport './Logo.css';\r\nconst Logo = () =>{\r\n    return(\r\n    <div className=\"ma4 mt0\">\r\n        <Tilt className=\"Tilt br1 shadow-2\" options={{ max : 30 }} style={{ height: 125, width: 125 }} >\r\n        <div className=\"Tilt-inner pa3 \"> <img style={{paddingTop:'3px'}} alt=\"Logo\" src={brain} /> </div>\r\n        </Tilt>\r\n    </div>\r\n    );\r\n}\r\nexport default Logo;","import React from \"react\";\r\nimport './Imageform.css';\r\nconst Imageform = ({ onInputChange, onButtonClick }) => {\r\n    return (\r\n        <div>\r\n            <p className=\"f3\">\r\n                {\"Welcome to image recognition smart brain, it will detect the face.\"}\r\n            </p>\r\n            <div className=\"center form pa4 br3 shadow-2\">\r\n                <div className=\"center\">\r\n                    <input className=\"f4 pa2 w-70 center\" type={'tex'} onChange={onInputChange} />\r\n                    <button className=\"w-30 grow f4 link ph3 pv2 dib white bg-light-purple\" onClick={onButtonClick}>Detect</button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default Imageform;","import React from \"react\";\r\nconst Rank = () =>{\r\n    return(\r\n        <div>\r\n        <div className=\"f3 white\">\r\n            {\"Naman, your current rank is...\"}\r\n        </div>\r\n        <div className=\"f1 white\">\r\n            {'#5'}\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\nexport default Rank;","import React from \"react\";\r\nconst Signin = ({onRouteChange}) => {\r\n    return (\r\n        <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n            <main className=\"pa4 black-80\">\r\n                <div className=\"measure \">\r\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                        <legend className=\"f2 fw6 ph0 mh0\">Sign In</legend>\r\n                        <div className=\"mt3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                            <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\" id=\"email-address\" />\r\n                        </div>\r\n                        <div className=\"mv3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                            <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\" id=\"password\" />\r\n                        </div>\r\n                    </fieldset>\r\n                    <div className=\"\">\r\n                        <input onClick={() => onRouteChange('home')}\r\n                        className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n                        type=\"submit\" \r\n                        value=\"Sign in\" />\r\n                    </div>\r\n                    <div className=\"lh-copy mt3\">\r\n                        <p onClick={() => onRouteChange('Register')} className=\"f6 link dim black db pointer\">Register</p>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </article>\r\n    );\r\n}\r\nexport default Signin;","import React from \"react\";\r\nconst Register = ({onRouteChange}) => {\r\n    return (\r\n        <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n            <main className=\"pa4 black-80\">\r\n                <div className=\"measure \">\r\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                        <legend className=\"f2 fw6 ph0 mh0\">Register</legend>\r\n                        <div className=\"mt3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n                            <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" name=\"name\" id=\"name\" />\r\n                        </div>\r\n                        <div className=\"mt3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                            <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\" id=\"email-address\" />\r\n                        </div>\r\n                        <div className=\"mv3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                            <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\" id=\"password\" />\r\n                        </div>\r\n                    </fieldset>\r\n                    <div className=\"\">\r\n                        <input onClick={() => onRouteChange('home')}\r\n                        className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n                        type=\"submit\" \r\n                        value=\"Register\" />\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </article>\r\n    );\r\n}\r\nexport default Register;","import './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Facerecognition from './components/Facerecognition/Facerecognition';\nimport Logo from './components/Logo/Logo';\nimport Imageform from './components/Imageform/Imageform';\nimport Rank from './components/Rank/Rank';\nimport { Component } from 'react';\nimport Clarifai from 'clarifai';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Particles from \"react-tsparticles\";\n\nconst app = new Clarifai.App({\n  apiKey: '9eaba5f5dc6c4693be823e920206a0cd'\n});\nconst particlesorigin = {\n  particles: {\n    color: {\n      value: \"#ffffff\",\n    },\n    links: {\n      color: \"#ffffff\",\n      distance: 150,\n      enable: true,\n      opacity: 0.5,\n      width: 1,\n    },\n    collisions: {\n      enable: true,\n    },\n    move: {\n      direction: \"none\",\n      enable: true,\n      outMode: \"bounce\",\n      random: false,\n      speed: 6,\n      straight: false,\n    },\n    number: {\n      density: {\n        enable: true,\n        area: 800,\n      },\n      value: 80,\n    },\n    opacity: {\n      value: 0.5,\n    },\n    shape: {\n      type: \"circle\",\n    },\n    size: {\n      random: true,\n      value: 5,\n    },\n  },\n}\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageurl: '',\n      box:{},\n      route: 'Signin',\n      isSignedIn: false\n    }\n  }\n  claculateFaceLocaion = (data) =>{\n    const face = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    // console.log(width,height);\n    return{\n      leftCol: face.left_col*width,\n      topRow: face.top_row*height,\n      rightCol:width - (face.right_col * width),\n      bottomRow:height - (face.bottom_row * height)\n    }\n  }\n  displayFace =(box)=>{\n    console.log(box);\n    this.setState({box:box});\n  }\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonClick = () => {\n    console.log(\"click\");\n    this.setState({imageurl:this.state.input});\n    app.models\n      .predict(\n        Clarifai.FACE_DETECT_MODEL,\n        this.state.input)\n      .then(response => this.displayFace(this.claculateFaceLocaion(response)))\n      .catch(err => console.log(err));\n  }\n  onRouteChange = (route) => {\n    if (route == 'signout') {\n      this.setState({ isSignedIn: false })\n    }\n    else if (route == 'home') {\n      this.setState({ isSignedIn: true })\n    }\n    this.setState({ route: route });\n  }\n  render() {\n    const { isSignedIn, route } = this.state;\n    return (\n\n      <div className=\"App\">\n        <Particles className='particles'\n          params={particlesorigin} />\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n        {route === 'home'\n          ? <div>\n            <Logo />\n            <Rank />\n            <Imageform\n              onInputChange={this.onInputChange}\n              onButtonClick={this.onButtonClick} />\n            <Facerecognition box={this.state.box} imageurl={this.state.imageurl}/>\n          </div>\n          : (\n            route === 'Signin'\n              ? <Signin onRouteChange={this.onRouteChange} />\n              : <Register onRouteChange={this.onRouteChange} />\n          )\n\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n\n    // const raw = JSON.stringify({\n    //   \"user_app_id\": {\n    //         \"user_id\": \"{naman_goyal}\",\n    //         \"app_id\": \"{naman}\"\n    //     },\n    //   \"inputs\": [\n    //     {\n    //       \"data\": {\n    //         \"image\": {\n    //           \"url\": \"https://samples.clarifai.com/face-det.jpg\"\n    //         }\n    //       }\n    //     }\n    //   ]\n    // });\n    \n    // const requestOptions = {\n    //   method: 'POST',\n    //   headers: {\n    //     'Accept': 'applications/json',\n    //     'Authorization': 'Key {9eaba5f5dc6c4693be823e920206a0cd}'\n    //   },\n    //   body: raw\n    // };\n    \n    // // NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n    // // https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n    // // this will default to the latest version_id\n    \n    // fetch(\"https://api.clarifai.com/v2/models/{FACE_DETECT_MODEL}/outputs\", requestOptions)//https://api.clarifai.com/v2/models/{face-detection}/versions/{45fb9a671625463fa646c3523a3087d5}/outputs\", requestOptions)\n    //   .then(response => response.text())\n    //   .then(result => console.log(JSON.parse(result, null, 2)))\n    //   .catch(error => console.log('error', error));\n    // this.setState({imageUrl: this.state.input});\n    // app.models\n    //   .predict(\n    // // HEADS UP! Sometimes the Clarifai Models can be down or not working as they are constantly getting updated.\n    // // A good way to check if the model you are using is up, is to check them on the clarifai website. For example,\n    // // for the Face Detect Mode: https://www.clarifai.com/models/face-detection\n    // // If that isn't working, then that means you will have to wait until their servers are back up. Another solution\n    // // is to use a different version of their model that works like the ones found here: https://github.com/Clarifai/clarifai-javascript/blob/master/src/index.js\n    // // so you would change from:\n    // // .predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n    // // to:\n    // // .predict('53e1df302c079b3db8a0a36033ed2d15', this.state.input)\n    //     Clarifai.FACE_DETECT_MODEL,\n    //     // this.state.input)\n    //   )\n    //   .then(response => {\n    //     console.log('hi', response)\n    //     if (response) {\n    //       fetch('http://localhost:3000/image', {\n    //         // method: 'put',\n    //         headers: {'Content-Type': 'application/json'},\n    //         body: JSON.stringify({\n    //           id: this.state.user.id\n    //         })\n    //       })\n    //         .then(response => response.json())\n    //         .then(count => {\n    //           this.setState(Object.assign(this.state.user, { entries: count}))\n    //         })\n\n    //     }\n    //     // this.displayFaceBox(this.calculateFaceLocation(response))\n    //   })\n    //   .catch(err => console.log(err));\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}